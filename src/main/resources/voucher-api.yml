# API-first development with OpenAPI
# This file will be used at compile time to generate Spring-MVC endpoint stubs using openapi-generator
openapi: '3.0.1'
info:
  title: Voucher API
  version: 0.0.1
  description: Voucher API
  contact:
    email: delorean@docomodigital.com

servers:
  - url: /v1
    description: Development server
paths:
  /voucher-type/available:
    get:
      tags:
        - voucher-types
      summary: search the voucher type available
      operationId: getAvailableVoucherTypes
      description: list of voucher types for specific merchant
      parameters:
        - in: query
          name: merchant
          description: merchant identifier
          required: true
          schema:
            type: string
        - in: query
          name: paymentProvider
          description: payment provider that can be consume the vouchers
          required: true
          schema:
            type: string
        - in: query
          name: country
          description: country when the voucher can be consumed the vouchers
          required: true
          schema:
            type: string
      responses:
        '200':
          description: resulting Voucher types list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AvailableVoucherTypes'
        '404':
          description: voucher types not available
  /voucher-type:
    get:
      tags:
        - voucher-types
      summary: search the voucher type
      operationId: getVoucherTypes
      description: list of voucher types with optional filters
      parameters:
        - in: query
          name: merchant
          description: merchant identifier
          required: false
          schema:
            type: string
        - in: query
          name: country
          description: country where the vouchers are distributed
          required: false
          schema:
            type: string
        - in: query
          name: paymentProvider
          description: payment provider that can be consume the vouchers
          required: false
          schema:
            type: string
        - in: query
          name: currency
          description: currency how the voucher can be purchased
          required: false
          schema:
            type: string
        - in: query
          name: shop
          description: distributor of the vouchers
          required: false
          schema:
            type: string
        - in: query
          name: enabled
          description: distributor of the vouchers
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: resulting Voucher types list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VoucherTypes'
    post:
      tags:
        - voucher-types
      summary: create the voucher type
      operationId: createVoucherType
      description: voucher type created
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VoucherTypes'
      responses:
        '201':
          description: resulting Voucher type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoucherTypes'

  /voucher-type/{code}:
    get:
      tags:
        - voucher-types
      summary: search the voucher type by code
      operationId: getVoucherType
      description: voucher type with code passed
      parameters:
        - in: path
          name: code
          description: code of the voucher type
          required: true
          schema:
            type: string
      responses:
        '200':
          description: resulting Voucher type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoucherTypes'
    put:
      tags:
        - voucher-types
      summary: update the voucher type by code
      operationId: updateVoucherType
      description: voucher type with code passed
      parameters:
        - in: path
          name: code
          description: code of the voucher type
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VoucherTypes'
      responses:
        '200':
          description: resulting Voucher type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoucherTypes'


components:
  schemas:
    AvailableVoucherTypes:
      type: object
      properties:
        code:
          type: string
          example: VOU1MONTH
        description:
          type: string
          example: 1 Month Voucher
        amount:
          type: number
          example: 19.99
        currency:
          type: string
          example: USD
        voucherAvailable:
          type: integer
          example: 42
    VoucherTypes:
      type: object
      required:
        - description
        - amount
        - currency
        - merchant
        - country
        - paymentProvider
        - shop
      properties:
        code:
          type: string
          example: VOU1MONTH
        description:
          type: string
          example: 1 Month Voucher
        amount:
          type: number
          example: 19.99
        currency:
          type: string
          example: USD
        merchant:
          type: string
          example: tinder
        country:
          type: string
          example: IT
        paymentProvider:
          type: string
          example: PAYTM
        shop:
          type: string
          example: MNO1234
        enabled:
          type: boolean
          example: IT
        startDate:
          type: string
          format: date
          example: 02/02/2018
        endDate:
          type: string
          format: date
          example: 02/02/2018
