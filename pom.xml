<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.3.0.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.docomodigital.delorean</groupId>
    <artifactId>voucher-service</artifactId>
    <version>1.0.1.23-SNAPSHOT</version>
    <packaging>jar</packaging>
    <name>voucher-service</name>
    <description>Microservice that manage the Vouchers</description>

    <properties>
        <java.version>1.8</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <project.testresult.directory>${project.build.directory}/test-results</project.testresult.directory>
        <maven.build.timestamp.format>yyyyMMddHHmmss</maven.build.timestamp.format>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <archunit-junit5.version>0.12.0</archunit-junit5.version>
        <mapstruct.version>1.3.1.Final</mapstruct.version>
        <commons-io.version>2.6</commons-io.version>
        <cucumber-jvm.version>4.8.0</cucumber-jvm.version>
        <springfox.version>2.9.2</springfox.version>
        <problem-spring-web.version>0.25.2</problem-spring-web.version>
        <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
        <maven-resources-plugin.version>3.1.0</maven-resources-plugin.version>
        <spring-nohttp-checkstyle.version>0.0.3.RELEASE</spring-nohttp-checkstyle.version>
        <jacoco-maven-plugin.version>0.8.5</jacoco-maven-plugin.version>
        <openapi-generator-maven-plugin.version>4.2.0</openapi-generator-maven-plugin.version>
        <jacoco.utReportFolder>${project.build.directory}/jacoco/test</jacoco.utReportFolder>
        <jacoco.utReportFile>${jacoco.utReportFolder}/test.exec</jacoco.utReportFile>
        <jacoco.itReportFolder>${project.build.directory}/jacoco/integrationTest</jacoco.itReportFolder>
        <jacoco.itReportFile>${jacoco.itReportFolder}/integrationTest.exec</jacoco.itReportFile>
        <junit.utReportFolder>${project.testresult.directory}/test</junit.utReportFolder>
        <junit.itReportFolder>${project.testresult.directory}/integrationTest</junit.itReportFolder>
        <jackson-databind-nullable.version>0.2.0</jackson-databind-nullable.version>
        <spring-cloud.version>Hoxton.BUILD-SNAPSHOT</spring-cloud.version>
        <logstash-logback-encoder.version>6.2</logstash-logback-encoder.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.jayway.jsonpath</groupId>
            <artifactId>json-path</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-hppc</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-afterburner</artifactId>
        </dependency>
        <dependency>
            <groupId>org.zalando</groupId>
            <artifactId>problem-spring-web</artifactId>
            <version>${problem-spring-web.version}</version>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>${springfox.version}</version>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>${springfox.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.mapstruct</groupId>
                    <artifactId>mapstruct</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.google.code.findbugs</groupId>
                    <artifactId>jsr305</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.javassist</groupId>
                    <artifactId>javassist</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-bean-validators</artifactId>
            <version>${springfox.version}</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate.validator</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>8.0.0.Final</version>
        </dependency>
        <dependency>
            <groupId>org.openapitools</groupId>
            <artifactId>jackson-databind-nullable</artifactId>
            <version>${jackson-databind-nullable.version}</version>
        </dependency>
        <!-- spring security -->
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-config</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- openfeign -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-openfeign</artifactId>
            <version>2.0.0.RELEASE</version>
        </dependency>
        <dependency>
            <groupId>com.netflix.feign</groupId>
            <artifactId>feign-jackson</artifactId>
            <version>8.18.0</version>
        </dependency>

        <!-- Apache Commons libraries -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-vfs2</artifactId>
            <version>2.0</version>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>${commons-io.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Mapping object depedencies -->
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId>
            <version>${mapstruct.version}</version>
        </dependency>
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct-processor</artifactId>
            <version>${mapstruct.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>

        <!-- Cucumber dependencies -->
        <dependency>
            <groupId>io.cucumber</groupId>
            <artifactId>cucumber-junit</artifactId>
            <version>${cucumber-jvm.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.cucumber</groupId>
            <artifactId>cucumber-spring</artifactId>
            <version>${cucumber-jvm.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-mongodb</artifactId>
        </dependency>
        <dependency>
            <groupId>de.flapdoodle.embed</groupId>
            <artifactId>de.flapdoodle.embed.mongo</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- General Spring boot dependencies -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-undertow</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </exclude>
                    </excludes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.openapitools</groupId>
                <artifactId>openapi-generator-maven-plugin</artifactId>
            </plugin>
        </plugins>
        <pluginManagement>
            <plugins>
                <!--                <plugin>-->
                <!--                    <groupId>org.jacoco</groupId>-->
                <!--                    <artifactId>jacoco-maven-plugin</artifactId>-->
                <!--                    <version>${jacoco-maven-plugin.version}</version>-->
                <!--                    <configuration>-->
                <!--                        <excludes>-->
                <!--                            <exclude>**/config/**/*.class</exclude>-->
                <!--                            <exclude>**/client/merchant/*.class</exclude>-->
                <!--                            <exclude>**/client/merchant/model/*.class</exclude>-->
                <!--                            <exclude>**/aop/logging/*.class</exclude>-->
                <!--                            <exclude>**/**Exception.class</exclude>-->
                <!--                            <exclude>**/VoucherServiceApplication.class</exclude>-->
                <!--                            <exclude>**/web/api/ApiUtil.class</exclude>-->
                <!--                            <exclude>**/web/api/VoucherApi.class</exclude>-->
                <!--                            <exclude>**/web/api/VoucherTypeApi.class</exclude>-->
                <!--                            <exclude>**/web/api/ProductsApi.class</exclude>-->
                <!--                            <exclude>**/web/api/ExternalApi.class</exclude>-->
                <!--                            <exclude>**/api/model/*.class</exclude>-->
                <!--                        </excludes>-->
                <!--                    </configuration>-->
                <!--                    <executions>-->
                <!--                        <execution>-->
                <!--                            <id>pre-unit-tests</id>-->
                <!--                            <goals>-->
                <!--                                <goal>prepare-agent</goal>-->
                <!--                            </goals>-->
                <!--                            <configuration>-->
                <!--                                &lt;!&ndash; Sets the path to the file which contains the execution data. &ndash;&gt;-->
                <!--                                <destFile>${jacoco.utReportFile}</destFile>-->
                <!--                            </configuration>-->
                <!--                        </execution>-->
                <!--                        &lt;!&ndash; Ensures that the code coverage report for unit tests is created after unit tests have been run &ndash;&gt;-->
                <!--                        <execution>-->
                <!--                            <id>post-unit-test</id>-->
                <!--                            <phase>test</phase>-->
                <!--                            <goals>-->
                <!--                                <goal>report</goal>-->
                <!--                            </goals>-->
                <!--                            <configuration>-->
                <!--                                <dataFile>${jacoco.utReportFile}</dataFile>-->
                <!--                                <outputDirectory>${jacoco.utReportFolder}</outputDirectory>-->
                <!--                            </configuration>-->
                <!--                        </execution>-->
                <!--                        <execution>-->
                <!--                            <id>pre-integration-tests</id>-->
                <!--                            <goals>-->
                <!--                                <goal>prepare-agent-integration</goal>-->
                <!--                            </goals>-->
                <!--                            <configuration>-->
                <!--                                &lt;!&ndash; Sets the path to the file which contains the execution data. &ndash;&gt;-->
                <!--                                <destFile>${jacoco.itReportFile}</destFile>-->
                <!--                            </configuration>-->
                <!--                        </execution>-->
                <!--                        &lt;!&ndash; Ensures that the code coverage report for integration tests is created after integration tests have been run &ndash;&gt;-->
                <!--                        <execution>-->
                <!--                            <id>post-integration-tests</id>-->
                <!--                            <phase>post-integration-test</phase>-->
                <!--                            <goals>-->
                <!--                                <goal>report-integration</goal>-->
                <!--                            </goals>-->
                <!--                            <configuration>-->
                <!--                                <dataFile>${jacoco.itReportFile}</dataFile>-->
                <!--                                <outputDirectory>${jacoco.itReportFolder}</outputDirectory>-->
                <!--                            </configuration>-->
                <!--                        </execution>-->
                <!--                    </executions>-->
                <!--                </plugin>-->
                <plugin>
                    <groupId>org.openapitools</groupId>
                    <artifactId>openapi-generator-maven-plugin</artifactId>
                    <version>${openapi-generator-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>generate</goal>
                            </goals>
                            <configuration>
                                <inputSpec>${project.basedir}/src/main/resources/voucher-api.yml</inputSpec>
                                <generatorName>spring</generatorName>
                                <apiPackage>com.docomodigital.delorean.voucher.web.api</apiPackage>
                                <modelPackage>com.docomodigital.delorean.voucher.web.api.model</modelPackage>
                                <generateApiTests>false</generateApiTests>
                                <generateModelTests>false</generateModelTests>
                                <generateApiDocumentation>true</generateApiDocumentation>
                                <generateModelDocumentation>true</generateModelDocumentation>
                                <importMappings>Problem=org.zalando.problem.Problem</importMappings>
                                <skipValidateSpec>false</skipValidateSpec>
                                <configOptions>
                                    <interfaceOnly>true</interfaceOnly>
                                    <delegatePattern>false</delegatePattern>
                                    <title>voucher</title>
                                </configOptions>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
</project>
